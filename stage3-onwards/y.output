Terminals unused in grammar

   EQUAL


Grammar

    0 $accept: start $end

    1 start: gdecl fdefllist mainblock

    2 gdecl: DECL decllist ENDDECL

    3 decllist: decl decllist
    4         | /* empty */

    5 decl: dtype idlist ';'

    6 dtype: INTEGER
    7      | BOOLEAN

    8 idlist: declid ',' idlist
    9       | declid

   10 declid: ID
   11       | ID '[' DIGIT ']'
   12       | ID '(' defarglist ')'

   13 defarglist: defarglist defargentry
   14           | /* empty */

   15 defargentry: dtype defargidlist ';'

   16 defargidlist: ID ',' defargidlist
   17             | ID

   18 fdefllist: fdefllist fdef
   19          | /* empty */

   20 fdef: dtype ID '(' defarglist ')' '{' LDefblock Body '}'

   21 mainblock: INTEGER MAIN '(' ')' '{' LDefblock Body '}'

   22 LDefblock: DECL ldecllist ENDDECL

   23 ldecllist: ldecl ldecllist
   24          | /* empty */

   25 ldecl: dtype lidlist ';'

   26 lidlist: ID ',' lidlist
   27        | ID

   28 Body: BEGIN slist RetStmt END

   29 slist: stmt slist
   30      | stmt

   31 stmt: IDT '=' E ';'
   32     | ID '=' E ';'
   33     | READ '(' IDT ')' ';'
   34     | READ '(' ID ')' ';'
   35     | WRITE '(' E ')' ';'
   36     | IF '(' E ')' THEN slist ENDIF ';'
   37     | IF '(' E ')' THEN slist ELSE slist ENDIF ';'
   38     | WHILE '(' E ')' DO slist ENDWHILE ';'

   39 E: E '+' E
   40  | E '-' E
   41  | E '*' E
   42  | E '/' E
   43  | E '%' E
   44  | E '>' E
   45  | E '<' E
   46  | E LTE E
   47  | E GTE E
   48  | E EQUALITY E
   49  | E NOTEQUAL E
   50  | E AND E
   51  | E OR E
   52  | NOT E
   53  | '(' E ')'
   54  | DIGIT
   55  | ID
   56  | IDT
   57  | ID '(' carglist ')'
   58  | BOL

   59 carglist: cargitem ',' carglist
   60         | cargitem
   61         | /* empty */

   62 cargitem: ID

   63 IDT: ID '[' E ']'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 43
'(' (40) 12 20 21 33 34 35 36 37 38 53 57
')' (41) 12 20 21 33 34 35 36 37 38 53 57
'*' (42) 41
'+' (43) 39
',' (44) 8 16 26 59
'-' (45) 40
'/' (47) 42
';' (59) 5 15 25 31 32 33 34 35 36 37 38
'<' (60) 45
'=' (61) 31 32
'>' (62) 44
'[' (91) 11 63
']' (93) 11 63
'{' (123) 20 21
'}' (125) 20 21
error (256)
DIGIT (258) 11 54
EQUAL (259)
BOL (260) 58
ID (261) 10 11 12 16 17 20 26 27 32 34 55 57 62 63
READ (262) 33 34
WRITE (263) 35
IF (264) 36 37
THEN (265) 36 37
ELSE (266) 37
ENDIF (267) 36 37
WHILE (268) 38
DO (269) 38
ENDWHILE (270) 38
INTEGER (271) 6 21
DECL (272) 2 22
ENDDECL (273) 2 22
BOOLEAN (274) 7
BEGIN (275) 28
END (276) 28
MAIN (277) 21
RetStmt (278) 28
OR (279) 51
AND (280) 50
NOTEQUAL (281) 49
EQUALITY (282) 48
GTE (283) 47
LTE (284) 46
NOT (285) 52


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
start (48)
    on left: 1, on right: 0
gdecl (49)
    on left: 2, on right: 1
decllist (50)
    on left: 3 4, on right: 2 3
decl (51)
    on left: 5, on right: 3
dtype (52)
    on left: 6 7, on right: 5 15 20 25
idlist (53)
    on left: 8 9, on right: 5 8
declid (54)
    on left: 10 11 12, on right: 8 9
defarglist (55)
    on left: 13 14, on right: 12 13 20
defargentry (56)
    on left: 15, on right: 13
defargidlist (57)
    on left: 16 17, on right: 15 16
fdefllist (58)
    on left: 18 19, on right: 1 18
fdef (59)
    on left: 20, on right: 18
mainblock (60)
    on left: 21, on right: 1
LDefblock (61)
    on left: 22, on right: 20 21
ldecllist (62)
    on left: 23 24, on right: 22 23
ldecl (63)
    on left: 25, on right: 23
lidlist (64)
    on left: 26 27, on right: 25 26
Body (65)
    on left: 28, on right: 20 21
slist (66)
    on left: 29 30, on right: 28 29 36 37 38
stmt (67)
    on left: 31 32 33 34 35 36 37 38, on right: 29 30
E (68)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58, on right: 31 32 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49 50 51 52 53 63
carglist (69)
    on left: 59 60 61, on right: 57 59
cargitem (70)
    on left: 62, on right: 59 60
IDT (71)
    on left: 63, on right: 31 33 56


State 0

    0 $accept: . start $end

    DECL  shift, and go to state 1

    start  go to state 2
    gdecl  go to state 3


State 1

    2 gdecl: DECL . decllist ENDDECL

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    $default  reduce using rule 4 (decllist)

    decllist  go to state 6
    decl      go to state 7
    dtype     go to state 8


State 2

    0 $accept: start . $end

    $end  shift, and go to state 9


State 3

    1 start: gdecl . fdefllist mainblock

    $default  reduce using rule 19 (fdefllist)

    fdefllist  go to state 10


State 4

    6 dtype: INTEGER .

    $default  reduce using rule 6 (dtype)


State 5

    7 dtype: BOOLEAN .

    $default  reduce using rule 7 (dtype)


State 6

    2 gdecl: DECL decllist . ENDDECL

    ENDDECL  shift, and go to state 11


State 7

    3 decllist: decl . decllist

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    $default  reduce using rule 4 (decllist)

    decllist  go to state 12
    decl      go to state 7
    dtype     go to state 8


State 8

    5 decl: dtype . idlist ';'

    ID  shift, and go to state 13

    idlist  go to state 14
    declid  go to state 15


State 9

    0 $accept: start $end .

    $default  accept


State 10

    1 start: gdecl fdefllist . mainblock
   18 fdefllist: fdefllist . fdef

    INTEGER  shift, and go to state 16
    BOOLEAN  shift, and go to state 5

    dtype      go to state 17
    fdef       go to state 18
    mainblock  go to state 19


State 11

    2 gdecl: DECL decllist ENDDECL .

    $default  reduce using rule 2 (gdecl)


State 12

    3 decllist: decl decllist .

    $default  reduce using rule 3 (decllist)


State 13

   10 declid: ID .
   11       | ID . '[' DIGIT ']'
   12       | ID . '(' defarglist ')'

    '('  shift, and go to state 20
    '['  shift, and go to state 21

    $default  reduce using rule 10 (declid)


State 14

    5 decl: dtype idlist . ';'

    ';'  shift, and go to state 22


State 15

    8 idlist: declid . ',' idlist
    9       | declid .

    ','  shift, and go to state 23

    $default  reduce using rule 9 (idlist)


State 16

    6 dtype: INTEGER .
   21 mainblock: INTEGER . MAIN '(' ')' '{' LDefblock Body '}'

    MAIN  shift, and go to state 24

    $default  reduce using rule 6 (dtype)


State 17

   20 fdef: dtype . ID '(' defarglist ')' '{' LDefblock Body '}'

    ID  shift, and go to state 25


State 18

   18 fdefllist: fdefllist fdef .

    $default  reduce using rule 18 (fdefllist)


State 19

    1 start: gdecl fdefllist mainblock .

    $default  reduce using rule 1 (start)


State 20

   12 declid: ID '(' . defarglist ')'

    $default  reduce using rule 14 (defarglist)

    defarglist  go to state 26


State 21

   11 declid: ID '[' . DIGIT ']'

    DIGIT  shift, and go to state 27


State 22

    5 decl: dtype idlist ';' .

    $default  reduce using rule 5 (decl)


State 23

    8 idlist: declid ',' . idlist

    ID  shift, and go to state 13

    idlist  go to state 28
    declid  go to state 15


State 24

   21 mainblock: INTEGER MAIN . '(' ')' '{' LDefblock Body '}'

    '('  shift, and go to state 29


State 25

   20 fdef: dtype ID . '(' defarglist ')' '{' LDefblock Body '}'

    '('  shift, and go to state 30


State 26

   12 declid: ID '(' defarglist . ')'
   13 defarglist: defarglist . defargentry

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    ')'      shift, and go to state 31

    dtype        go to state 32
    defargentry  go to state 33


State 27

   11 declid: ID '[' DIGIT . ']'

    ']'  shift, and go to state 34


State 28

    8 idlist: declid ',' idlist .

    $default  reduce using rule 8 (idlist)


State 29

   21 mainblock: INTEGER MAIN '(' . ')' '{' LDefblock Body '}'

    ')'  shift, and go to state 35


State 30

   20 fdef: dtype ID '(' . defarglist ')' '{' LDefblock Body '}'

    $default  reduce using rule 14 (defarglist)

    defarglist  go to state 36


State 31

   12 declid: ID '(' defarglist ')' .

    $default  reduce using rule 12 (declid)


State 32

   15 defargentry: dtype . defargidlist ';'

    ID  shift, and go to state 37

    defargidlist  go to state 38


State 33

   13 defarglist: defarglist defargentry .

    $default  reduce using rule 13 (defarglist)


State 34

   11 declid: ID '[' DIGIT ']' .

    $default  reduce using rule 11 (declid)


State 35

   21 mainblock: INTEGER MAIN '(' ')' . '{' LDefblock Body '}'

    '{'  shift, and go to state 39


State 36

   13 defarglist: defarglist . defargentry
   20 fdef: dtype ID '(' defarglist . ')' '{' LDefblock Body '}'

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    ')'      shift, and go to state 40

    dtype        go to state 32
    defargentry  go to state 33


State 37

   16 defargidlist: ID . ',' defargidlist
   17             | ID .

    ','  shift, and go to state 41

    $default  reduce using rule 17 (defargidlist)


State 38

   15 defargentry: dtype defargidlist . ';'

    ';'  shift, and go to state 42


State 39

   21 mainblock: INTEGER MAIN '(' ')' '{' . LDefblock Body '}'

    DECL  shift, and go to state 43

    LDefblock  go to state 44


State 40

   20 fdef: dtype ID '(' defarglist ')' . '{' LDefblock Body '}'

    '{'  shift, and go to state 45


State 41

   16 defargidlist: ID ',' . defargidlist

    ID  shift, and go to state 37

    defargidlist  go to state 46


State 42

   15 defargentry: dtype defargidlist ';' .

    $default  reduce using rule 15 (defargentry)


State 43

   22 LDefblock: DECL . ldecllist ENDDECL

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    $default  reduce using rule 24 (ldecllist)

    dtype      go to state 47
    ldecllist  go to state 48
    ldecl      go to state 49


State 44

   21 mainblock: INTEGER MAIN '(' ')' '{' LDefblock . Body '}'

    BEGIN  shift, and go to state 50

    Body  go to state 51


State 45

   20 fdef: dtype ID '(' defarglist ')' '{' . LDefblock Body '}'

    DECL  shift, and go to state 43

    LDefblock  go to state 52


State 46

   16 defargidlist: ID ',' defargidlist .

    $default  reduce using rule 16 (defargidlist)


State 47

   25 ldecl: dtype . lidlist ';'

    ID  shift, and go to state 53

    lidlist  go to state 54


State 48

   22 LDefblock: DECL ldecllist . ENDDECL

    ENDDECL  shift, and go to state 55


State 49

   23 ldecllist: ldecl . ldecllist

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    $default  reduce using rule 24 (ldecllist)

    dtype      go to state 47
    ldecllist  go to state 56
    ldecl      go to state 49


State 50

   28 Body: BEGIN . slist RetStmt END

    ID     shift, and go to state 57
    READ   shift, and go to state 58
    WRITE  shift, and go to state 59
    IF     shift, and go to state 60
    WHILE  shift, and go to state 61

    slist  go to state 62
    stmt   go to state 63
    IDT    go to state 64


State 51

   21 mainblock: INTEGER MAIN '(' ')' '{' LDefblock Body . '}'

    '}'  shift, and go to state 65


State 52

   20 fdef: dtype ID '(' defarglist ')' '{' LDefblock . Body '}'

    BEGIN  shift, and go to state 50

    Body  go to state 66


State 53

   26 lidlist: ID . ',' lidlist
   27        | ID .

    ','  shift, and go to state 67

    $default  reduce using rule 27 (lidlist)


State 54

   25 ldecl: dtype lidlist . ';'

    ';'  shift, and go to state 68


State 55

   22 LDefblock: DECL ldecllist ENDDECL .

    $default  reduce using rule 22 (LDefblock)


State 56

   23 ldecllist: ldecl ldecllist .

    $default  reduce using rule 23 (ldecllist)


State 57

   32 stmt: ID . '=' E ';'
   63 IDT: ID . '[' E ']'

    '='  shift, and go to state 69
    '['  shift, and go to state 70


State 58

   33 stmt: READ . '(' IDT ')' ';'
   34     | READ . '(' ID ')' ';'

    '('  shift, and go to state 71


State 59

   35 stmt: WRITE . '(' E ')' ';'

    '('  shift, and go to state 72


State 60

   36 stmt: IF . '(' E ')' THEN slist ENDIF ';'
   37     | IF . '(' E ')' THEN slist ELSE slist ENDIF ';'

    '('  shift, and go to state 73


State 61

   38 stmt: WHILE . '(' E ')' DO slist ENDWHILE ';'

    '('  shift, and go to state 74


State 62

   28 Body: BEGIN slist . RetStmt END

    RetStmt  shift, and go to state 75


State 63

   29 slist: stmt . slist
   30      | stmt .

    ID     shift, and go to state 57
    READ   shift, and go to state 58
    WRITE  shift, and go to state 59
    IF     shift, and go to state 60
    WHILE  shift, and go to state 61

    $default  reduce using rule 30 (slist)

    slist  go to state 76
    stmt   go to state 63
    IDT    go to state 64


State 64

   31 stmt: IDT . '=' E ';'

    '='  shift, and go to state 77


State 65

   21 mainblock: INTEGER MAIN '(' ')' '{' LDefblock Body '}' .

    $default  reduce using rule 21 (mainblock)


State 66

   20 fdef: dtype ID '(' defarglist ')' '{' LDefblock Body . '}'

    '}'  shift, and go to state 78


State 67

   26 lidlist: ID ',' . lidlist

    ID  shift, and go to state 53

    lidlist  go to state 79


State 68

   25 ldecl: dtype lidlist ';' .

    $default  reduce using rule 25 (ldecl)


State 69

   32 stmt: ID '=' . E ';'

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 85
    IDT  go to state 86


State 70

   63 IDT: ID '[' . E ']'

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 87
    IDT  go to state 86


State 71

   33 stmt: READ '(' . IDT ')' ';'
   34     | READ '(' . ID ')' ';'

    ID  shift, and go to state 88

    IDT  go to state 89


State 72

   35 stmt: WRITE '(' . E ')' ';'

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 90
    IDT  go to state 86


State 73

   36 stmt: IF '(' . E ')' THEN slist ENDIF ';'
   37     | IF '(' . E ')' THEN slist ELSE slist ENDIF ';'

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 91
    IDT  go to state 86


State 74

   38 stmt: WHILE '(' . E ')' DO slist ENDWHILE ';'

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 92
    IDT  go to state 86


State 75

   28 Body: BEGIN slist RetStmt . END

    END  shift, and go to state 93


State 76

   29 slist: stmt slist .

    $default  reduce using rule 29 (slist)


State 77

   31 stmt: IDT '=' . E ';'

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 94
    IDT  go to state 86


State 78

   20 fdef: dtype ID '(' defarglist ')' '{' LDefblock Body '}' .

    $default  reduce using rule 20 (fdef)


State 79

   26 lidlist: ID ',' lidlist .

    $default  reduce using rule 26 (lidlist)


State 80

   54 E: DIGIT .

    $default  reduce using rule 54 (E)


State 81

   58 E: BOL .

    $default  reduce using rule 58 (E)


State 82

   55 E: ID .
   57  | ID . '(' carglist ')'
   63 IDT: ID . '[' E ']'

    '('  shift, and go to state 95
    '['  shift, and go to state 70

    $default  reduce using rule 55 (E)


State 83

   52 E: NOT . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 96
    IDT  go to state 86


State 84

   53 E: '(' . E ')'

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 97
    IDT  go to state 86


State 85

   32 stmt: ID '=' E . ';'
   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    OR        shift, and go to state 98
    AND       shift, and go to state 99
    NOTEQUAL  shift, and go to state 100
    EQUALITY  shift, and go to state 101
    '>'       shift, and go to state 102
    '<'       shift, and go to state 103
    GTE       shift, and go to state 104
    LTE       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ';'       shift, and go to state 111


State 86

   56 E: IDT .

    $default  reduce using rule 56 (E)


State 87

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E
   63 IDT: ID '[' E . ']'

    OR        shift, and go to state 98
    AND       shift, and go to state 99
    NOTEQUAL  shift, and go to state 100
    EQUALITY  shift, and go to state 101
    '>'       shift, and go to state 102
    '<'       shift, and go to state 103
    GTE       shift, and go to state 104
    LTE       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ']'       shift, and go to state 112


State 88

   34 stmt: READ '(' ID . ')' ';'
   63 IDT: ID . '[' E ']'

    ')'  shift, and go to state 113
    '['  shift, and go to state 70


State 89

   33 stmt: READ '(' IDT . ')' ';'

    ')'  shift, and go to state 114


State 90

   35 stmt: WRITE '(' E . ')' ';'
   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    OR        shift, and go to state 98
    AND       shift, and go to state 99
    NOTEQUAL  shift, and go to state 100
    EQUALITY  shift, and go to state 101
    '>'       shift, and go to state 102
    '<'       shift, and go to state 103
    GTE       shift, and go to state 104
    LTE       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ')'       shift, and go to state 115


State 91

   36 stmt: IF '(' E . ')' THEN slist ENDIF ';'
   37     | IF '(' E . ')' THEN slist ELSE slist ENDIF ';'
   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    OR        shift, and go to state 98
    AND       shift, and go to state 99
    NOTEQUAL  shift, and go to state 100
    EQUALITY  shift, and go to state 101
    '>'       shift, and go to state 102
    '<'       shift, and go to state 103
    GTE       shift, and go to state 104
    LTE       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ')'       shift, and go to state 116


State 92

   38 stmt: WHILE '(' E . ')' DO slist ENDWHILE ';'
   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    OR        shift, and go to state 98
    AND       shift, and go to state 99
    NOTEQUAL  shift, and go to state 100
    EQUALITY  shift, and go to state 101
    '>'       shift, and go to state 102
    '<'       shift, and go to state 103
    GTE       shift, and go to state 104
    LTE       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ')'       shift, and go to state 117


State 93

   28 Body: BEGIN slist RetStmt END .

    $default  reduce using rule 28 (Body)


State 94

   31 stmt: IDT '=' E . ';'
   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    OR        shift, and go to state 98
    AND       shift, and go to state 99
    NOTEQUAL  shift, and go to state 100
    EQUALITY  shift, and go to state 101
    '>'       shift, and go to state 102
    '<'       shift, and go to state 103
    GTE       shift, and go to state 104
    LTE       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ';'       shift, and go to state 118


State 95

   57 E: ID '(' . carglist ')'

    ID  shift, and go to state 119

    $default  reduce using rule 61 (carglist)

    carglist  go to state 120
    cargitem  go to state 121


State 96

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E
   52  | NOT E .

    $default  reduce using rule 52 (E)


State 97

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E
   53  | '(' E . ')'

    OR        shift, and go to state 98
    AND       shift, and go to state 99
    NOTEQUAL  shift, and go to state 100
    EQUALITY  shift, and go to state 101
    '>'       shift, and go to state 102
    '<'       shift, and go to state 103
    GTE       shift, and go to state 104
    LTE       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ')'       shift, and go to state 122


State 98

   51 E: E OR . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 123
    IDT  go to state 86


State 99

   50 E: E AND . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 124
    IDT  go to state 86


State 100

   49 E: E NOTEQUAL . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 125
    IDT  go to state 86


State 101

   48 E: E EQUALITY . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 126
    IDT  go to state 86


State 102

   44 E: E '>' . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 127
    IDT  go to state 86


State 103

   45 E: E '<' . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 128
    IDT  go to state 86


State 104

   47 E: E GTE . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 129
    IDT  go to state 86


State 105

   46 E: E LTE . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 130
    IDT  go to state 86


State 106

   39 E: E '+' . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 131
    IDT  go to state 86


State 107

   40 E: E '-' . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 132
    IDT  go to state 86


State 108

   41 E: E '*' . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 133
    IDT  go to state 86


State 109

   42 E: E '/' . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 134
    IDT  go to state 86


State 110

   43 E: E '%' . E

    DIGIT  shift, and go to state 80
    BOL    shift, and go to state 81
    ID     shift, and go to state 82
    NOT    shift, and go to state 83
    '('    shift, and go to state 84

    E    go to state 135
    IDT  go to state 86


State 111

   32 stmt: ID '=' E ';' .

    $default  reduce using rule 32 (stmt)


State 112

   63 IDT: ID '[' E ']' .

    $default  reduce using rule 63 (IDT)


State 113

   34 stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 136


State 114

   33 stmt: READ '(' IDT ')' . ';'

    ';'  shift, and go to state 137


State 115

   35 stmt: WRITE '(' E ')' . ';'

    ';'  shift, and go to state 138


State 116

   36 stmt: IF '(' E ')' . THEN slist ENDIF ';'
   37     | IF '(' E ')' . THEN slist ELSE slist ENDIF ';'

    THEN  shift, and go to state 139


State 117

   38 stmt: WHILE '(' E ')' . DO slist ENDWHILE ';'

    DO  shift, and go to state 140


State 118

   31 stmt: IDT '=' E ';' .

    $default  reduce using rule 31 (stmt)


State 119

   62 cargitem: ID .

    $default  reduce using rule 62 (cargitem)


State 120

   57 E: ID '(' carglist . ')'

    ')'  shift, and go to state 141


State 121

   59 carglist: cargitem . ',' carglist
   60         | cargitem .

    ','  shift, and go to state 142

    $default  reduce using rule 60 (carglist)


State 122

   53 E: '(' E ')' .

    $default  reduce using rule 53 (E)


State 123

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E
   51  | E OR E .

    AND       shift, and go to state 99
    NOTEQUAL  shift, and go to state 100
    EQUALITY  shift, and go to state 101
    '>'       shift, and go to state 102
    '<'       shift, and go to state 103
    GTE       shift, and go to state 104
    LTE       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    $default  reduce using rule 51 (E)


State 124

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   50  | E AND E .
   51  | E . OR E

    NOTEQUAL  shift, and go to state 100
    EQUALITY  shift, and go to state 101
    '>'       shift, and go to state 102
    '<'       shift, and go to state 103
    GTE       shift, and go to state 104
    LTE       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    $default  reduce using rule 50 (E)


State 125

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   49  | E NOTEQUAL E .
   50  | E . AND E
   51  | E . OR E

    '>'  shift, and go to state 102
    '<'  shift, and go to state 103
    GTE  shift, and go to state 104
    LTE  shift, and go to state 105
    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 49 (E)


State 126

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   48  | E EQUALITY E .
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    '>'  shift, and go to state 102
    '<'  shift, and go to state 103
    GTE  shift, and go to state 104
    LTE  shift, and go to state 105
    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 48 (E)


State 127

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   44  | E '>' E .
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 44 (E)


State 128

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   45  | E '<' E .
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 45 (E)


State 129

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   47  | E GTE E .
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 47 (E)


State 130

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   46  | E LTE E .
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 46 (E)


State 131

   39 E: E . '+' E
   39  | E '+' E .
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 39 (E)


State 132

   39 E: E . '+' E
   40  | E . '-' E
   40  | E '-' E .
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 40 (E)


State 133

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   41  | E '*' E .
   42  | E . '/' E
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    $default  reduce using rule 41 (E)


State 134

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   42  | E '/' E .
   43  | E . '%' E
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    $default  reduce using rule 42 (E)


State 135

   39 E: E . '+' E
   40  | E . '-' E
   41  | E . '*' E
   42  | E . '/' E
   43  | E . '%' E
   43  | E '%' E .
   44  | E . '>' E
   45  | E . '<' E
   46  | E . LTE E
   47  | E . GTE E
   48  | E . EQUALITY E
   49  | E . NOTEQUAL E
   50  | E . AND E
   51  | E . OR E

    $default  reduce using rule 43 (E)


State 136

   34 stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 34 (stmt)


State 137

   33 stmt: READ '(' IDT ')' ';' .

    $default  reduce using rule 33 (stmt)


State 138

   35 stmt: WRITE '(' E ')' ';' .

    $default  reduce using rule 35 (stmt)


State 139

   36 stmt: IF '(' E ')' THEN . slist ENDIF ';'
   37     | IF '(' E ')' THEN . slist ELSE slist ENDIF ';'

    ID     shift, and go to state 57
    READ   shift, and go to state 58
    WRITE  shift, and go to state 59
    IF     shift, and go to state 60
    WHILE  shift, and go to state 61

    slist  go to state 143
    stmt   go to state 63
    IDT    go to state 64


State 140

   38 stmt: WHILE '(' E ')' DO . slist ENDWHILE ';'

    ID     shift, and go to state 57
    READ   shift, and go to state 58
    WRITE  shift, and go to state 59
    IF     shift, and go to state 60
    WHILE  shift, and go to state 61

    slist  go to state 144
    stmt   go to state 63
    IDT    go to state 64


State 141

   57 E: ID '(' carglist ')' .

    $default  reduce using rule 57 (E)


State 142

   59 carglist: cargitem ',' . carglist

    ID  shift, and go to state 119

    $default  reduce using rule 61 (carglist)

    carglist  go to state 145
    cargitem  go to state 121


State 143

   36 stmt: IF '(' E ')' THEN slist . ENDIF ';'
   37     | IF '(' E ')' THEN slist . ELSE slist ENDIF ';'

    ELSE   shift, and go to state 146
    ENDIF  shift, and go to state 147


State 144

   38 stmt: WHILE '(' E ')' DO slist . ENDWHILE ';'

    ENDWHILE  shift, and go to state 148


State 145

   59 carglist: cargitem ',' carglist .

    $default  reduce using rule 59 (carglist)


State 146

   37 stmt: IF '(' E ')' THEN slist ELSE . slist ENDIF ';'

    ID     shift, and go to state 57
    READ   shift, and go to state 58
    WRITE  shift, and go to state 59
    IF     shift, and go to state 60
    WHILE  shift, and go to state 61

    slist  go to state 149
    stmt   go to state 63
    IDT    go to state 64


State 147

   36 stmt: IF '(' E ')' THEN slist ENDIF . ';'

    ';'  shift, and go to state 150


State 148

   38 stmt: WHILE '(' E ')' DO slist ENDWHILE . ';'

    ';'  shift, and go to state 151


State 149

   37 stmt: IF '(' E ')' THEN slist ELSE slist . ENDIF ';'

    ENDIF  shift, and go to state 152


State 150

   36 stmt: IF '(' E ')' THEN slist ENDIF ';' .

    $default  reduce using rule 36 (stmt)


State 151

   38 stmt: WHILE '(' E ')' DO slist ENDWHILE ';' .

    $default  reduce using rule 38 (stmt)


State 152

   37 stmt: IF '(' E ')' THEN slist ELSE slist ENDIF . ';'

    ';'  shift, and go to state 153


State 153

   37 stmt: IF '(' E ')' THEN slist ELSE slist ENDIF ';' .

    $default  reduce using rule 37 (stmt)
